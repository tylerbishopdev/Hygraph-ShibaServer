"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NetlifyBuildState = exports.MigrationOperationType = exports.RemoteSourceType = exports.SystemSidebarElementType = exports.VisibilityTypes = exports.ComponentUnionFieldType = exports.UnionFieldType = exports.ComponentFieldType = exports.RelationalFieldType = exports.EnumerableFieldType = exports.GraphQlRemoteSourceIntrospectionMethod = exports.RemoteFieldApiMethod = exports.RemoteFieldType = exports.SimpleFieldType = exports.AppInstallationStatus = exports.FieldAppElementFeature = exports.AppElementType = exports.AppWebhooksPermission = exports.AppContentPermission = exports.AppSchemaPermission = exports.AppPublicationStatus = exports.ExtensionFieldType = exports.AvailableExtensionPermissionAction = exports.AvailableExtensionSrcType = exports.WebhookMethod = exports.WebhookTriggerAction = exports.WebhookTriggerType = exports.WebhookLogOrderByInput = exports.WebhookTriggerSource = exports.ViewGroupContentType = exports.ViewGroupType = exports.ColorPalette = exports.Remote_Graphql_Type = exports.MigrationStatus = exports.PermissionAction = exports.ColumnOrderByDir = exports.ContentViewType = void 0;
var ContentViewType;
(function (ContentViewType) {
    ContentViewType["BuiltIn"] = "BUILT_IN";
    ContentViewType["Public"] = "PUBLIC";
})(ContentViewType = exports.ContentViewType || (exports.ContentViewType = {}));
var ColumnOrderByDir;
(function (ColumnOrderByDir) {
    ColumnOrderByDir["Asc"] = "ASC";
    ColumnOrderByDir["Desc"] = "DESC";
})(ColumnOrderByDir = exports.ColumnOrderByDir || (exports.ColumnOrderByDir = {}));
var PermissionAction;
(function (PermissionAction) {
    PermissionAction["ProjectClone"] = "PROJECT_CLONE";
    PermissionAction["ProjectUpdate"] = "PROJECT_UPDATE";
    PermissionAction["ProjectDelete"] = "PROJECT_DELETE";
    PermissionAction["ManagePayment"] = "MANAGE_PAYMENT";
    PermissionAction["PlaygroundUse"] = "PLAYGROUND_USE";
    PermissionAction["AuditLogsRead"] = "AUDIT_LOGS_READ";
    PermissionAction["ViewTeamMemberSettings"] = "VIEW_TEAM_MEMBER_SETTINGS";
    PermissionAction["ViewRolePermissionSettings"] = "VIEW_ROLE_PERMISSION_SETTINGS";
    PermissionAction["ViewSchema"] = "VIEW_SCHEMA";
    PermissionAction["EnvironmentCreate"] = "ENVIRONMENT_CREATE";
    PermissionAction["EnvironmentRead"] = "ENVIRONMENT_READ";
    PermissionAction["EnvironmentUpdate"] = "ENVIRONMENT_UPDATE";
    PermissionAction["EnvironmentDelete"] = "ENVIRONMENT_DELETE";
    PermissionAction["EnvironmentPromote"] = "ENVIRONMENT_PROMOTE";
    PermissionAction["ModelCreate"] = "MODEL_CREATE";
    PermissionAction["ModelRead"] = "MODEL_READ";
    PermissionAction["ModelUpdate"] = "MODEL_UPDATE";
    PermissionAction["ModelDelete"] = "MODEL_DELETE";
    PermissionAction["ComponentCreate"] = "COMPONENT_CREATE";
    PermissionAction["ComponentRead"] = "COMPONENT_READ";
    PermissionAction["ComponentUpdate"] = "COMPONENT_UPDATE";
    PermissionAction["ComponentDelete"] = "COMPONENT_DELETE";
    PermissionAction["LocaleCreate"] = "LOCALE_CREATE";
    PermissionAction["LocaleRead"] = "LOCALE_READ";
    PermissionAction["LocaleUpdate"] = "LOCALE_UPDATE";
    PermissionAction["LocaleDelete"] = "LOCALE_DELETE";
    PermissionAction["StageCreate"] = "STAGE_CREATE";
    PermissionAction["StageRead"] = "STAGE_READ";
    PermissionAction["StageUpdate"] = "STAGE_UPDATE";
    PermissionAction["StageDelete"] = "STAGE_DELETE";
    PermissionAction["EnumerationCreate"] = "ENUMERATION_CREATE";
    PermissionAction["EnumerationRead"] = "ENUMERATION_READ";
    PermissionAction["EnumerationUpdate"] = "ENUMERATION_UPDATE";
    PermissionAction["EnumerationDelete"] = "ENUMERATION_DELETE";
    PermissionAction["FieldCreate"] = "FIELD_CREATE";
    PermissionAction["FieldRead"] = "FIELD_READ";
    PermissionAction["FieldUpdate"] = "FIELD_UPDATE";
    PermissionAction["FieldDelete"] = "FIELD_DELETE";
    PermissionAction["RemoteSourceCreate"] = "REMOTE_SOURCE_CREATE";
    PermissionAction["RemoteSourceRead"] = "REMOTE_SOURCE_READ";
    PermissionAction["RemoteSourceUpdate"] = "REMOTE_SOURCE_UPDATE";
    PermissionAction["RemoteSourceDelete"] = "REMOTE_SOURCE_DELETE";
    PermissionAction["PatCreate"] = "PAT_CREATE";
    PermissionAction["PatRead"] = "PAT_READ";
    PermissionAction["PatUpdate"] = "PAT_UPDATE";
    PermissionAction["PatDelete"] = "PAT_DELETE";
    PermissionAction["ContentviewCreate"] = "CONTENTVIEW_CREATE";
    PermissionAction["ContentviewRead"] = "CONTENTVIEW_READ";
    PermissionAction["ContentviewUpdate"] = "CONTENTVIEW_UPDATE";
    PermissionAction["ContentviewSystemUpdate"] = "CONTENTVIEW_SYSTEM_UPDATE";
    PermissionAction["ContentviewDelete"] = "CONTENTVIEW_DELETE";
    PermissionAction["StorageBucketCreate"] = "STORAGE_BUCKET_CREATE";
    PermissionAction["StorageBucketRead"] = "STORAGE_BUCKET_READ";
    PermissionAction["StorageBucketUpdate"] = "STORAGE_BUCKET_UPDATE";
    PermissionAction["StorageBucketDelete"] = "STORAGE_BUCKET_DELETE";
    PermissionAction["RoleCreate"] = "ROLE_CREATE";
    PermissionAction["RoleUpdate"] = "ROLE_UPDATE";
    PermissionAction["RoleDelete"] = "ROLE_DELETE";
    PermissionAction["WebhookCreate"] = "WEBHOOK_CREATE";
    PermissionAction["WebhookRead"] = "WEBHOOK_READ";
    PermissionAction["WebhookUpdate"] = "WEBHOOK_UPDATE";
    PermissionAction["WebhookDelete"] = "WEBHOOK_DELETE";
    PermissionAction["UserInvite"] = "USER_INVITE";
    PermissionAction["UserAssignrole"] = "USER_ASSIGNROLE";
    PermissionAction["UserRemove"] = "USER_REMOVE";
    PermissionAction["ViewGroupCreate"] = "VIEW_GROUP_CREATE";
    PermissionAction["ViewGroupRead"] = "VIEW_GROUP_READ";
    PermissionAction["ViewGroupUpdate"] = "VIEW_GROUP_UPDATE";
    PermissionAction["ViewGroupDelete"] = "VIEW_GROUP_DELETE";
    PermissionAction["ContentCreate"] = "CONTENT_CREATE";
    PermissionAction["ContentRead"] = "CONTENT_READ";
    PermissionAction["ContentUpdate"] = "CONTENT_UPDATE";
    PermissionAction["ContentDelete"] = "CONTENT_DELETE";
    PermissionAction["ContentPublish"] = "CONTENT_PUBLISH";
    PermissionAction["ContentUpdatePublished"] = "CONTENT_UPDATE_PUBLISHED";
    PermissionAction["ContentPermissionCreate"] = "CONTENT_PERMISSION_CREATE";
    PermissionAction["ContentPermissionRead"] = "CONTENT_PERMISSION_READ";
    PermissionAction["ContentPermissionUpdate"] = "CONTENT_PERMISSION_UPDATE";
    PermissionAction["ContentPermissionDelete"] = "CONTENT_PERMISSION_DELETE";
    PermissionAction["IntegrationCreate"] = "INTEGRATION_CREATE";
    PermissionAction["IntegrationRead"] = "INTEGRATION_READ";
    PermissionAction["IntegrationUpdate"] = "INTEGRATION_UPDATE";
    PermissionAction["IntegrationDelete"] = "INTEGRATION_DELETE";
    PermissionAction["NetlifyTriggerBuild"] = "NETLIFY_TRIGGER_BUILD";
    PermissionAction["ExtensionCreate"] = "EXTENSION_CREATE";
    PermissionAction["ExtensionRead"] = "EXTENSION_READ";
    PermissionAction["ExtensionUpdate"] = "EXTENSION_UPDATE";
    PermissionAction["ExtensionDelete"] = "EXTENSION_DELETE";
    PermissionAction["AppCreate"] = "APP_CREATE";
    PermissionAction["AppUpdate"] = "APP_UPDATE";
    PermissionAction["AppDelete"] = "APP_DELETE";
    PermissionAction["AppInstallationCreate"] = "APP_INSTALLATION_CREATE";
    PermissionAction["AppInstallationUpdate"] = "APP_INSTALLATION_UPDATE";
    PermissionAction["AppInstallationDelete"] = "APP_INSTALLATION_DELETE";
})(PermissionAction = exports.PermissionAction || (exports.PermissionAction = {}));
var MigrationStatus;
(function (MigrationStatus) {
    MigrationStatus["Queued"] = "QUEUED";
    MigrationStatus["Running"] = "RUNNING";
    MigrationStatus["Success"] = "SUCCESS";
    MigrationStatus["Timeout"] = "TIMEOUT";
    MigrationStatus["Failed"] = "FAILED";
})(MigrationStatus = exports.MigrationStatus || (exports.MigrationStatus = {}));
var Remote_Graphql_Type;
(function (Remote_Graphql_Type) {
    Remote_Graphql_Type["Scalar"] = "SCALAR";
    Remote_Graphql_Type["Object"] = "OBJECT";
    Remote_Graphql_Type["Interface"] = "INTERFACE";
    Remote_Graphql_Type["Union"] = "UNION";
    Remote_Graphql_Type["Enum"] = "ENUM";
    Remote_Graphql_Type["InputObject"] = "INPUT_OBJECT";
})(Remote_Graphql_Type = exports.Remote_Graphql_Type || (exports.Remote_Graphql_Type = {}));
var ColorPalette;
(function (ColorPalette) {
    ColorPalette["Pink"] = "PINK";
    ColorPalette["Purple"] = "PURPLE";
    ColorPalette["Orange"] = "ORANGE";
    ColorPalette["Red"] = "RED";
    ColorPalette["Brown"] = "BROWN";
    ColorPalette["Teal"] = "TEAL";
    ColorPalette["Green"] = "GREEN";
    ColorPalette["Yellow"] = "YELLOW";
})(ColorPalette = exports.ColorPalette || (exports.ColorPalette = {}));
var ViewGroupType;
(function (ViewGroupType) {
    ViewGroupType["Custom"] = "CUSTOM";
    ViewGroupType["System"] = "SYSTEM";
    ViewGroupType["UserCreated"] = "USER_CREATED";
})(ViewGroupType = exports.ViewGroupType || (exports.ViewGroupType = {}));
var ViewGroupContentType;
(function (ViewGroupContentType) {
    ViewGroupContentType["Default"] = "DEFAULT";
    ViewGroupContentType["Asset"] = "ASSET";
})(ViewGroupContentType = exports.ViewGroupContentType || (exports.ViewGroupContentType = {}));
var WebhookTriggerSource;
(function (WebhookTriggerSource) {
    WebhookTriggerSource["Pat"] = "PAT";
    WebhookTriggerSource["Member"] = "MEMBER";
    WebhookTriggerSource["Public"] = "PUBLIC";
})(WebhookTriggerSource = exports.WebhookTriggerSource || (exports.WebhookTriggerSource = {}));
var WebhookLogOrderByInput;
(function (WebhookLogOrderByInput) {
    WebhookLogOrderByInput["CalledAtAsc"] = "calledAt_ASC";
    WebhookLogOrderByInput["CalledAtDesc"] = "calledAt_DESC";
})(WebhookLogOrderByInput = exports.WebhookLogOrderByInput || (exports.WebhookLogOrderByInput = {}));
/** Defines the type of the trigger */
var WebhookTriggerType;
(function (WebhookTriggerType) {
    WebhookTriggerType["ContentModel"] = "CONTENT_MODEL";
})(WebhookTriggerType = exports.WebhookTriggerType || (exports.WebhookTriggerType = {}));
/**
 * Defines which operation will trigger the webhook.
 * Some operations rely on the type of stage. E.g. on a
 * publishing stage, the webhook will only be triggered for
 * PUBLISH and UNPUBLISH events. On other stages, only
 * CREATE, UPDATE and DELETE are triggering the webhook.
 */
var WebhookTriggerAction;
(function (WebhookTriggerAction) {
    WebhookTriggerAction["Create"] = "CREATE";
    WebhookTriggerAction["Update"] = "UPDATE";
    WebhookTriggerAction["Delete"] = "DELETE";
    WebhookTriggerAction["Publish"] = "PUBLISH";
    WebhookTriggerAction["Unpublish"] = "UNPUBLISH";
})(WebhookTriggerAction = exports.WebhookTriggerAction || (exports.WebhookTriggerAction = {}));
var WebhookMethod;
(function (WebhookMethod) {
    WebhookMethod["Get"] = "GET";
    WebhookMethod["Post"] = "POST";
    WebhookMethod["Put"] = "PUT";
    WebhookMethod["Delete"] = "DELETE";
})(WebhookMethod = exports.WebhookMethod || (exports.WebhookMethod = {}));
var AvailableExtensionSrcType;
(function (AvailableExtensionSrcType) {
    AvailableExtensionSrcType["Inline"] = "INLINE";
    AvailableExtensionSrcType["Sdk"] = "SDK";
})(AvailableExtensionSrcType = exports.AvailableExtensionSrcType || (exports.AvailableExtensionSrcType = {}));
var AvailableExtensionPermissionAction;
(function (AvailableExtensionPermissionAction) {
    AvailableExtensionPermissionAction["Input"] = "INPUT";
    AvailableExtensionPermissionAction["Form"] = "FORM";
    AvailableExtensionPermissionAction["Api"] = "API";
})(AvailableExtensionPermissionAction = exports.AvailableExtensionPermissionAction || (exports.AvailableExtensionPermissionAction = {}));
var ExtensionFieldType;
(function (ExtensionFieldType) {
    ExtensionFieldType["Id"] = "ID";
    ExtensionFieldType["String"] = "STRING";
    ExtensionFieldType["Richtext"] = "RICHTEXT";
    ExtensionFieldType["Int"] = "INT";
    ExtensionFieldType["Float"] = "FLOAT";
    ExtensionFieldType["Boolean"] = "BOOLEAN";
    ExtensionFieldType["Json"] = "JSON";
    ExtensionFieldType["Datetime"] = "DATETIME";
    ExtensionFieldType["Date"] = "DATE";
    ExtensionFieldType["Location"] = "LOCATION";
    ExtensionFieldType["Color"] = "COLOR";
    ExtensionFieldType["Graphql"] = "GRAPHQL";
    ExtensionFieldType["Rest"] = "REST";
    ExtensionFieldType["Enumeration"] = "ENUMERATION";
    ExtensionFieldType["Relation"] = "RELATION";
    ExtensionFieldType["Asset"] = "ASSET";
    ExtensionFieldType["Union"] = "UNION";
})(ExtensionFieldType = exports.ExtensionFieldType || (exports.ExtensionFieldType = {}));
var AppPublicationStatus;
(function (AppPublicationStatus) {
    AppPublicationStatus["Private"] = "PRIVATE";
    AppPublicationStatus["Pending"] = "PENDING";
    AppPublicationStatus["Public"] = "PUBLIC";
})(AppPublicationStatus = exports.AppPublicationStatus || (exports.AppPublicationStatus = {}));
var AppSchemaPermission;
(function (AppSchemaPermission) {
    AppSchemaPermission["None"] = "NONE";
    AppSchemaPermission["Read"] = "READ";
    AppSchemaPermission["ReadWrite"] = "READ_WRITE";
})(AppSchemaPermission = exports.AppSchemaPermission || (exports.AppSchemaPermission = {}));
var AppContentPermission;
(function (AppContentPermission) {
    AppContentPermission["None"] = "NONE";
    AppContentPermission["Read"] = "READ";
    AppContentPermission["ReadWrite"] = "READ_WRITE";
})(AppContentPermission = exports.AppContentPermission || (exports.AppContentPermission = {}));
var AppWebhooksPermission;
(function (AppWebhooksPermission) {
    AppWebhooksPermission["None"] = "NONE";
    AppWebhooksPermission["ReadWrite"] = "READ_WRITE";
})(AppWebhooksPermission = exports.AppWebhooksPermission || (exports.AppWebhooksPermission = {}));
var AppElementType;
(function (AppElementType) {
    AppElementType["Field"] = "field";
    AppElementType["FormSidebar"] = "formSidebar";
    AppElementType["Page"] = "page";
})(AppElementType = exports.AppElementType || (exports.AppElementType = {}));
var FieldAppElementFeature;
(function (FieldAppElementFeature) {
    FieldAppElementFeature["FieldRenderer"] = "FieldRenderer";
    FieldAppElementFeature["ListRenderer"] = "ListRenderer";
    FieldAppElementFeature["TableRenderer"] = "TableRenderer";
})(FieldAppElementFeature = exports.FieldAppElementFeature || (exports.FieldAppElementFeature = {}));
var AppInstallationStatus;
(function (AppInstallationStatus) {
    AppInstallationStatus["Pending"] = "PENDING";
    AppInstallationStatus["Completed"] = "COMPLETED";
    AppInstallationStatus["Disabled"] = "DISABLED";
})(AppInstallationStatus = exports.AppInstallationStatus || (exports.AppInstallationStatus = {}));
/** Field types */
var SimpleFieldType;
(function (SimpleFieldType) {
    SimpleFieldType["Id"] = "ID";
    SimpleFieldType["String"] = "STRING";
    SimpleFieldType["Richtext"] = "RICHTEXT";
    SimpleFieldType["Int"] = "INT";
    SimpleFieldType["Float"] = "FLOAT";
    SimpleFieldType["Boolean"] = "BOOLEAN";
    SimpleFieldType["Json"] = "JSON";
    SimpleFieldType["Datetime"] = "DATETIME";
    SimpleFieldType["Date"] = "DATE";
    SimpleFieldType["Location"] = "LOCATION";
    SimpleFieldType["Color"] = "COLOR";
})(SimpleFieldType = exports.SimpleFieldType || (exports.SimpleFieldType = {}));
var RemoteFieldType;
(function (RemoteFieldType) {
    RemoteFieldType["Graphql"] = "GRAPHQL";
    RemoteFieldType["Rest"] = "REST";
})(RemoteFieldType = exports.RemoteFieldType || (exports.RemoteFieldType = {}));
var RemoteFieldApiMethod;
(function (RemoteFieldApiMethod) {
    RemoteFieldApiMethod["Get"] = "GET";
    RemoteFieldApiMethod["Post"] = "POST";
})(RemoteFieldApiMethod = exports.RemoteFieldApiMethod || (exports.RemoteFieldApiMethod = {}));
var GraphQlRemoteSourceIntrospectionMethod;
(function (GraphQlRemoteSourceIntrospectionMethod) {
    GraphQlRemoteSourceIntrospectionMethod["Get"] = "GET";
    GraphQlRemoteSourceIntrospectionMethod["Post"] = "POST";
})(GraphQlRemoteSourceIntrospectionMethod = exports.GraphQlRemoteSourceIntrospectionMethod || (exports.GraphQlRemoteSourceIntrospectionMethod = {}));
var EnumerableFieldType;
(function (EnumerableFieldType) {
    EnumerableFieldType["Enumeration"] = "ENUMERATION";
})(EnumerableFieldType = exports.EnumerableFieldType || (exports.EnumerableFieldType = {}));
var RelationalFieldType;
(function (RelationalFieldType) {
    RelationalFieldType["Relation"] = "RELATION";
    RelationalFieldType["Asset"] = "ASSET";
})(RelationalFieldType = exports.RelationalFieldType || (exports.RelationalFieldType = {}));
var ComponentFieldType;
(function (ComponentFieldType) {
    ComponentFieldType["Component"] = "COMPONENT";
})(ComponentFieldType = exports.ComponentFieldType || (exports.ComponentFieldType = {}));
var UnionFieldType;
(function (UnionFieldType) {
    UnionFieldType["Union"] = "UNION";
})(UnionFieldType = exports.UnionFieldType || (exports.UnionFieldType = {}));
var ComponentUnionFieldType;
(function (ComponentUnionFieldType) {
    ComponentUnionFieldType["ComponentUnion"] = "COMPONENT_UNION";
})(ComponentUnionFieldType = exports.ComponentUnionFieldType || (exports.ComponentUnionFieldType = {}));
var VisibilityTypes;
(function (VisibilityTypes) {
    /** Field can be read and edited */
    VisibilityTypes["ReadWrite"] = "READ_WRITE";
    /** Field is shown but can't be edited in the UI, only through the API */
    VisibilityTypes["ReadOnly"] = "READ_ONLY";
    /** Field is not shown, but can be used by other fields such as slugs or UI Extensions */
    VisibilityTypes["Hidden"] = "HIDDEN";
    /** Field is not shown, and can only be read or edited through the API */
    VisibilityTypes["ApiOnly"] = "API_ONLY";
})(VisibilityTypes = exports.VisibilityTypes || (exports.VisibilityTypes = {}));
var SystemSidebarElementType;
(function (SystemSidebarElementType) {
    SystemSidebarElementType["Information"] = "INFORMATION";
    SystemSidebarElementType["Stages"] = "STAGES";
    SystemSidebarElementType["Localizations"] = "LOCALIZATIONS";
    SystemSidebarElementType["Versions"] = "VERSIONS";
    SystemSidebarElementType["PreviewUrls"] = "PREVIEW_URLS";
    SystemSidebarElementType["Releases"] = "RELEASES";
})(SystemSidebarElementType = exports.SystemSidebarElementType || (exports.SystemSidebarElementType = {}));
var RemoteSourceType;
(function (RemoteSourceType) {
    RemoteSourceType["Graphql"] = "GRAPHQL";
    RemoteSourceType["Rest"] = "REST";
})(RemoteSourceType = exports.RemoteSourceType || (exports.RemoteSourceType = {}));
var MigrationOperationType;
(function (MigrationOperationType) {
    MigrationOperationType["CreateProjectFromTemplate"] = "CREATE_PROJECT_FROM_TEMPLATE";
    MigrationOperationType["CreateEnvironment"] = "CREATE_ENVIRONMENT";
    MigrationOperationType["Batch"] = "BATCH";
    MigrationOperationType["CreateStage"] = "CREATE_STAGE";
    MigrationOperationType["UpdateStage"] = "UPDATE_STAGE";
    MigrationOperationType["DeleteStage"] = "DELETE_STAGE";
    MigrationOperationType["CreateLocale"] = "CREATE_LOCALE";
    MigrationOperationType["UpdateLocale"] = "UPDATE_LOCALE";
    MigrationOperationType["DeleteLocale"] = "DELETE_LOCALE";
    MigrationOperationType["CreateModel"] = "CREATE_MODEL";
    MigrationOperationType["UpdateModel"] = "UPDATE_MODEL";
    MigrationOperationType["DeleteModel"] = "DELETE_MODEL";
    MigrationOperationType["CreateRemoteTypeDefinition"] = "CREATE_REMOTE_TYPE_DEFINITION";
    MigrationOperationType["UpdateRemoteTypeDefinition"] = "UPDATE_REMOTE_TYPE_DEFINITION";
    MigrationOperationType["DeleteRemoteTypeDefinition"] = "DELETE_REMOTE_TYPE_DEFINITION";
    MigrationOperationType["CreateEnumeration"] = "CREATE_ENUMERATION";
    MigrationOperationType["UpdateEnumeration"] = "UPDATE_ENUMERATION";
    MigrationOperationType["DeleteEnumeration"] = "DELETE_ENUMERATION";
    MigrationOperationType["CreateSimpleField"] = "CREATE_SIMPLE_FIELD";
    MigrationOperationType["CreateEnumerableField"] = "CREATE_ENUMERABLE_FIELD";
    MigrationOperationType["CreateRelationalField"] = "CREATE_RELATIONAL_FIELD";
    MigrationOperationType["CreateUnionField"] = "CREATE_UNION_FIELD";
    MigrationOperationType["CreateRemoteField"] = "CREATE_REMOTE_FIELD";
    MigrationOperationType["UpdateSimpleField"] = "UPDATE_SIMPLE_FIELD";
    MigrationOperationType["UpdateEnumerableField"] = "UPDATE_ENUMERABLE_FIELD";
    MigrationOperationType["UpdateRelationalField"] = "UPDATE_RELATIONAL_FIELD";
    MigrationOperationType["UpdateUnionField"] = "UPDATE_UNION_FIELD";
    MigrationOperationType["DeleteField"] = "DELETE_FIELD";
})(MigrationOperationType = exports.MigrationOperationType || (exports.MigrationOperationType = {}));
var NetlifyBuildState;
(function (NetlifyBuildState) {
    NetlifyBuildState["Ready"] = "READY";
    NetlifyBuildState["Preparing"] = "PREPARING";
    NetlifyBuildState["Building"] = "BUILDING";
    NetlifyBuildState["Failed"] = "FAILED";
})(NetlifyBuildState = exports.NetlifyBuildState || (exports.NetlifyBuildState = {}));
//# sourceMappingURL=mgmtServerTypes.js.map